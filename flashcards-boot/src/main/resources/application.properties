# Initializes schema on each execution
spring.sql.init.mode=embedded
# Database URL
spring.datasource.url=jdbc:h2:mem:flashcards
# H2 Drive class
spring.datasource.driverClassName=org.h2.Driver
# Database Username
spring.datasource.username=sa
# Database Password
spring.datasource.password=password
#Enable H2 console
spring.h2.console.enabled=true

# Spring MVC Hidden Method filter
spring.mvc.hiddenmethod.filter.enabled=true

# Create the tables
spring.jpa.hibernate.ddl-auto=none

# Logging SQL queries
spring.jpa.properties.hibernate.show_sql=true

#Email server
spring.mail.host=smtp.gmail.com
#Email server port
spring.mail.port=587
#Email server username
spring.mail.username=${mail-username}
#Email server password
spring.mail.password=${mail-password}
#Email server additional properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.protocol=smtp
spring.mail.test-connection=true

# The format used for the keystore. It could be set to JKS in case it is a JKS file
server.ssl.key-store-type=PKCS12
# The path to the keystore containing the certificate
server.ssl.key-store=classpath:keystore/flashcards.p12
# The password used to generate the certificate
server.ssl.key-store-password=${keystore}
# The alias mapped to the certificate
server.ssl.key-alias=flashcards
# HTTPS Port
server.port=8443

spring.security.oauth2.client.registration.google.client-id=${client-id}
spring.security.oauth2.client.registration.google.client-secret=${client-secret}
spring.security.oauth2.client.registration.google.scope=email, profile

spring.cloud.vault.token=hvs.gmu1y7brIQKoBNExjP15XDjL
spring.cloud.vault.authentication=token
spring.cloud.vault.host=localhost
spring.cloud.vault.port=8200
spring.cloud.vault.scheme=http
spring.config.import=vault://secret/flashcards
spring.application.name=flashcards
